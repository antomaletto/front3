{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Front3\\\\entregable-frontend-3-junio22-main\\\\src\\\\components\\\\Item.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react'; // El componente Item no tiene componentes hijos.\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\n// Maqueta de Item:\n//    h3\n//    p\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\n//const stock=data.producto.stock;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Item(props) {\n  _s();\n\n  const {\n    itemStock,\n    setItemStock\n  } = useState({});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"producto\",\n    children: [\"/* maquetar Item aqu\\xED */\", /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: this.props.nombre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", this.props.descripcion]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\"En stock:\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: this.props.stock\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 19\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setItemCount(Math.max(itemCount - 1, 0)),\n      children: \"Comprar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this), \"/*\", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setItemCount(itemCount + 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 19\n    }, this), \"*/\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Item, \"cznaakvG2agsuJbrBvcW5d+UKC0=\");\n\n_c = Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"names":["React","Item","props","itemStock","setItemStock","useState","nombre","descripcion","stock","setItemCount","Math","max","itemCount"],"sources":["C:/Users/USER/Desktop/Front3/entregable-frontend-3-junio22-main/src/components/Item.js"],"sourcesContent":["import React from 'react';\r\n// El componente Item no tiene componentes hijos.\r\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\r\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\r\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\r\n// Maqueta de Item:\r\n//    h3\r\n//    p\r\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\r\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\r\n//const stock=data.producto.stock;\r\n\r\nexport default function Item(props) {\r\n \r\n  const {itemStock, setItemStock} = useState({});\r\n  return (\r\n    <div className='producto'>\r\n      /* maquetar Item aquí */\r\n      <h3>{this.props.nombre}</h3>\r\n                <p> {this.props.descripcion}</p>\r\n                <h5>En stock: \r\n                  <span>{this.props.stock}\r\n                  </span> </h5>\r\n\r\n                <button onClick={()=> setItemCount(Math.max(itemCount - 1, 0))}>Comprar</button>\r\n                /*<button onClick={() =>setItemCount(itemCount + 1)}></button>*/\r\n    </div>\r\n  )\r\n}\r\n\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;EAAA;;EAElC,MAAM;IAACC,SAAD;IAAYC;EAAZ,IAA4BC,QAAQ,CAAC,EAAD,CAA1C;EACA,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA,uDAEE;MAAA,UAAK,KAAKH,KAAL,CAAWI;IAAhB;MAAA;MAAA;MAAA;IAAA,QAFF,eAGY;MAAA,gBAAK,KAAKJ,KAAL,CAAWK,WAAhB;IAAA;MAAA;MAAA;MAAA;IAAA,QAHZ,eAIY;MAAA,qCACE;QAAA,UAAO,KAAKL,KAAL,CAAWM;MAAlB;QAAA;QAAA;QAAA;MAAA,QADF;IAAA;MAAA;MAAA;MAAA;IAAA,QAJZ,eAQY;MAAQ,OAAO,EAAE,MAAKC,YAAY,CAACC,IAAI,CAACC,GAAL,CAASC,SAAS,GAAG,CAArB,EAAwB,CAAxB,CAAD,CAAlC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QARZ,qBASc;MAAQ,OAAO,EAAE,MAAKH,YAAY,CAACG,SAAS,GAAG,CAAb;IAAlC;MAAA;MAAA;MAAA;IAAA,QATd;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAaD;;GAhBuBX,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}