{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\Front3\\\\entregable-frontend-3-junio22-main\\\\src\\\\components\\\\Item.js\";\nimport React from 'react';\nimport DataJson from './data.json'; // El componente Item no tiene componentes hijos.\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\n// Maqueta de Item:\n//    h3\n//    p\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\n//const stock=data.producto.stock;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Item(props) {\n  const productos = [DataJson];\n  /*state = {\r\n     producto: producto,\r\n     //pokemon: [pokedex[0].name, pokedex[0].id, pokedex[0].type],\r\n     producto: [this.id, this.producto.nombre, this.producto.descripcion,this.stock],\r\n   };*/\n  // const {itemStock, setItemStock} = useState({});\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"producto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: props.producto.producto.nombre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", props.producto.producto.descripcion]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\"En stock:\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: props.producto.stock\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 19\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_c = Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"names":["React","DataJson","Item","props","productos","producto","nombre","descripcion","stock"],"sources":["C:/Users/USER/Desktop/Front3/entregable-frontend-3-junio22-main/src/components/Item.js"],"sourcesContent":["import React from 'react';\r\nimport DataJson from './data.json';\r\n// El componente Item no tiene componentes hijos.\r\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo.\r\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App.\r\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso.\r\n// Maqueta de Item:\r\n//    h3\r\n//    p\r\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\r\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\")\r\n//const stock=data.producto.stock;\r\n\r\nexport default function Item(props) {\r\n  const productos=[DataJson];\r\n /*state = {\r\n    producto: producto,\r\n    //pokemon: [pokedex[0].name, pokedex[0].id, pokedex[0].type],\r\n    producto: [this.id, this.producto.nombre, this.producto.descripcion,this.stock],\r\n  };*/\r\n // const {itemStock, setItemStock} = useState({});\r\n  return (\r\n    <div className='producto'>\r\n      <h3>{props.producto.producto.nombre}</h3>\r\n                <p> {props.producto.producto.descripcion}</p>\r\n                <h5>En stock: \r\n                  <span>{props.producto.stock}\r\n                  </span> </h5>\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,aAArB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;EAClC,MAAMC,SAAS,GAAC,CAACH,QAAD,CAAhB;EACD;AACD;AACA;AACA;AACA;EACC;;EACC,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA,wBACE;MAAA,UAAKE,KAAK,CAACE,QAAN,CAAeA,QAAf,CAAwBC;IAA7B;MAAA;MAAA;MAAA;IAAA,QADF,eAEY;MAAA,gBAAKH,KAAK,CAACE,QAAN,CAAeA,QAAf,CAAwBE,WAA7B;IAAA;MAAA;MAAA;MAAA;IAAA,QAFZ,eAGY;MAAA,qCACE;QAAA,UAAOJ,KAAK,CAACE,QAAN,CAAeG;MAAtB;QAAA;QAAA;QAAA;MAAA,QADF;IAAA;MAAA;MAAA;MAAA;IAAA,QAHZ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAWD;KAnBuBN,I"},"metadata":{},"sourceType":"module"}